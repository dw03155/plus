<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="co.plus.prj.pnw.mapper.PNWMapper">

	<!-- 새 프로젝트-->
	<insert id="prjInsert" parameterType="co.plus.prj.pnw.vo.PNWVO">
		insert prj_id, prj_knd, prj_ttl, prj_cntn, prj_open_perm, ctgry_id, co_url
		into project
		values (prjid.val, #{prjKnd}, #{prjTtl}, #{prjOpenPerm}, #{ctgryId}, #{coUrl})
	</insert>

	<select id="ctgryKnd">
		select ctgry_id, ctgry_name
		from category
		where co_url = #{coUrl}
	</select>

	<!-- 내 프로젝트 : 즐겨찾기 -->
	<select id="favorMyPrj" resultType="co.plus.prj.pnw.vo.PNWVO">
		select b.mem_id, a.prj_id, a.prj_ttl, c.prj_color, a.prj_knd, a.prj_open_perm,
			(select count(*) from prj_parti where prj_id = a.prj_id) as partiCnt
		from project a, member b, prj_parti c
		where a.co_url = b.co_url        
			and b.mem_id = c.mem_id
			and a.prj_id = c.prj_id            
			and b.mem_id = #{memId}
            and a.prj_id in(select prj_id from favorite d where d.mem_id = b.mem_id)
	</select>

	<!-- 내 프로젝트 : 즐겨찾기X -->
	<select id="noMyPrj" resultType="co.plus.prj.pnw.vo.PNWVO">
		select b.mem_id, a.prj_id, a.prj_ttl, c.prj_color, a.prj_knd, a.prj_open_perm,
			(select count(*) from prj_parti where prj_id = a.prj_id) as partiCnt
		from project a, member b, prj_parti c
		where a.co_url = b.co_url        
			and b.mem_id = c.mem_id
			and a.prj_id = c.prj_id            
			and b.mem_id = #{memId}
            and a.prj_id not in(select prj_id from favorite d where d.mem_id = b.mem_id)
	</select>

	<!-- 전체 프로젝트 -->
	<select id="openProject" resultType="co.plus.prj.pnw.vo.PNWVO">
		select a.prj_id, a.prj_ttl, b.mem_id, c.name, c.wkpo
		from project a, prj_parti b, member c 
		where a.prj_knd ='C'
            and a.prj_id = b. prj_id
			and a.co_url = c.co_url
            and a.co_url = #{coUrl}
            and b.mem_id = c.mem_id
            and b.prj_perm = 'PM'
		union
		select d.prj_id, d.prj_ttl, e.mem_id, f.name, f.wkpo
		from project d, prj_parti e, member f 
		where d.prj_knd ='N'
            and d.prj_id = e. prj_id
			and d.co_url = f.co_url
            and d.co_url = #{coUrl}
            and e.mem_id = f.mem_id
            and e.mem_id = #{memId}
            and e.prj_perm = 'PM'
			and d.prj_open_perm = 'part'
		union
		select g.prj_id, g.prj_ttl, h.mem_id, i.name, i.wkpo
		from project g, prj_parti h, member i 
		where g.prj_knd = 'N'
            and g.prj_id = h.prj_id
            and g.co_url = i.co_url
            and g.co_url = #{coUrl}
			and h.mem_id = i.mem_id
            and h.prj_perm = 'PM'
            and g.prj_open_perm = 'all'
		<!-- 프로젝트 명으로 검색 -->
		<if test="prjTtl != null and prjTtl != ''">
			and prj_ttl like '%' || #{prjTtl} || '%'
		</if>
	</select>

	<!-- 프로젝트 폴더 메뉴 -->
	<select id="FolderMenu">
		select fold_name
		from mem_prj_fold
		where mem_id = #{memId}
	</select>
	
	<!-- 프로젝트 폴더 조회 -->
	<select id="prjFolder">
		select c.prj_color, a.prj_id, a.prj_ttl
		from project a, prj_fold b, mem_prj_fold c
		where a.prj_id = b.prj_id
			and b.fold_id = c.fold_id 
			and b.fold_id = #{foldId}
			and c.mem_id = #{memId}
	</select>

	<!-- 프로젝트 폴더 생성 -->
	<insert id="prjFoldInsert">
		insert into mem_prj_fold
		values (#{foldId}, #{foldName}, #{memId})
	</insert>

	<!-- 프로젝트 폴더 수정 ** -->
	<update id="prjFoldUpdate">
		update mem_prj_fold
		set foldId = #{foldId}, foldName = #{foldName}, memId = #{memId}
	</update>

	<!-- 프로젝트 폴더 삭제 ** -->
	<delete id="prjFoldDelete">
		delete from mem_prj_fold
		where foldId = #{foldId}
	</delete>

	<!-- 프로젝트 색상 설정 -->
	<update id="prjColor">
		update prj_parti
		set prj_color = #{prj_color}
	</update>
	
	<!-- 프로젝트 폴더 설정 **-->
	<insert id="prjFoldSet">
		insert from prj_fold
		values (#{fold_id}, #{prj_id})
	</insert>
	
	<!-- 프로젝트 수정 **-->
	<update id="prjUpdate">
		update project
		set prj_ttl = #{prj_ttl}, prj_open_perm = #{prj_open_perm}, ctgry_id = #{ctgry_id}
	</update>
	
	<!-- 프로젝트 삭제 -->
	<delete id="prjDelete">
		delete project
		set prj_id = #{prj_id}
	</delete>

	<!-- 프로젝트 : 홈 -->
	<select id="prjInfo" resultType="co.plus.prj.pnw.vo.PNWVO">		<!-- 프로젝트 정보 -->
		select a.*, b.prj_color
      	from project a, prj_parti b
      	where a.prj_id = #{prjId}
   			and a.prj_id = b.prj_id
  			and b.mem_id = #{memId}
	</select>
	
	<select id="prjTskAllCount" resultType="int">		<!-- 업무 상태에 따른 갯수-->
		select count(*)
		from notice_writing
		where prj_id = #{prjId}
		and noti_knd='task'
	</select>
	
	<select id="prjTskCount" resultType="co.plus.prj.pnw.vo.PNWVO">		<!-- 업무 상태에 따른 갯수-->
		select c.tsk_prgs, count(c.tsk_prgs) as tskCnt
		from project a, notice_writing b, task c
		where a.prj_id = #{prjId}
            and a.prj_id = b.prj_id
            and b.noti_id = c.noti_id
            group by c.tsk_prgs
	</select>
	
	<select id="pnwPinList" resultType="co.plus.prj.pnw.vo.PNWVO">		<!-- 상단고정 게시글 목록 -->
		select c.*,
			case when c.noti_knd = 'task' then (select tsk_prgs from task where noti_id = c.noti_id)
				when c.noti_knd = 'subtask' then (select subtsk_prgs from subtask where noti_id = c.noti_id)
				when c.noti_knd = 'schedule' then (select TO_CHAR(sche_dttm) from schedule where noti_id = c.noti_id)
				when c.noti_knd = 'todo' then (select TO_CHAR(RATIO_TO_TODO(c.noti_id)) from dual)
			end as addlist
		from member a, prj_parti b, board c, pincette d
		where c.prj_id = #{prjId}
			and b.prj_id = c.prj_id
			and c.prj_id = d.prj_id
			and c.noti_id = d.noti_id
            and a.mem_id = c.mem_id
			and a.mem_id = b.mem_id
	</select>
	
	<select id="pnwAllList" resultType="co.plus.prj.pnw.vo.PNWVO">		<!-- 전체 게시글 목록 -->
		select c.*, a.name,
			case when c.noti_knd = 'task' then (select tsk_prgs from task where noti_id = c.noti_id)
                when c.noti_knd = 'subtask' then (select subtsk_prgs from subtask where noti_id = c.noti_id)
				when c.noti_knd = 'schedule' then (select TO_CHAR(sche_dttm) from schedule where noti_id = c.noti_id)
				when c.noti_knd = 'todo' then (select TO_CHAR(RATIO_TO_TODO(c.noti_id)) from dual)
			end as addlist
		from member a, prj_parti b, board c
		where c.prj_id = #{prjId}
			and b.prj_id = c.prj_id
			and a.mem_id = c.mem_id
			and a.mem_id = b.mem_id
		<!-- 프로젝트 명으로 검색 -->
		<if test="notiTtl != null and notiTtl != ''">
			and noti_ttl like '%' || #{notiTtl} || '%'
		</if>
	</select>

	<select id="prjPartiCnt" resultType="int">		<!-- 전체 참여자 수 -->
		select count(*)
		from prj_parti
		where prj_id = #{prjId}
	</select>
	
	<select id="partiPM" resultType="co.plus.prj.pnw.vo.PNWVO">		<!-- 참여자 목록 : PM -->
		select a.mem_id, a.name, a.wkpo, a.co_url, a.dept
		from member a, prj_parti b
		where a.mem_id = b.mem_id
			and b.prj_id = #{prjId}
			and b.prj_perm = 'PM'
	</select>

	<select id="partiUser" resultType="co.plus.prj.pnw.vo.PNWVO">		<!-- 참여자 목록 : USER -->
		select a.mem_id, a.name, a.wkpo, a.co_url, a.dept, b.prj_perm
		from member a, prj_parti b
		where a.mem_id = b.mem_id
			and b.prj_id = #{prjId}
			and b.prj_perm = 'USER'
	</select>

	<select id="partiGuest" resultType="co.plus.prj.pnw.vo.PNWVO">		<!-- 참여자 목록 : GUEST -->
		select a.mem_id, a.name, a.wkpo, a.co_url, a.dept
		from member a, prj_parti b
		where a.mem_id = b.mem_id
			and b.prj_id = #{prjId}
			and b.prj_perm = 'GUEST'
	</select>
	<!-- <resultMap id="tskList" type="co.plus.prj.pnw.vo.PNWVO"> <result property="" 
		/> <result property="" /> <result property="" /> <collection property="" 
		/> </resultMap> <select id="tskPrgList" resultMap="tskList"> select a.* from 
		project a, member b, prj_parti c where a.prj_id </select> <select id="tskList" 
		resultMap="tskList"> select 1 from dual </select> -->

	<!-- 프로젝트 : 업무 -->
	<select id="tskPrgList" resultType="co.plus.prj.pnw.vo.PNWVO">
		select a.tsk_prgs
		from task a, notice_writing b, project c
		group by a.tsk_prgs
		where a.noti_id = b.noti_id
			and c.prj_id = #{prjId}
			and c.prj_id = b.prj_id
	</select>

	<select id="tskNWList"> <!-- ** -->
		select a.*, b.prj_id, b.noti_knd, b.mem_id as pic, b.noti_dttm, b.noti_open_perm, c.prj_ttl
		from task a, notice_writing b, project c
		where a.noti_id = b.noti_id
			and c.prj_id = #{prjId}
			and c.prj_id = b.prj_id
		union
		select d.*, e.prj_id, e.noti_knd, e.mem_id as pic, e.noti_dttm, e.noti_open_perm, f.prj_ttl
		from task d, notice_writing e, project f
		where a.noti_id = b.noti_id
			and c.prj_id = #{prjId}
			and c.prj_id = b.prj_id
	</select>

	<!-- 프로젝트 : 일정 -->
	<select id="scheList">
		select a.*, b.noti_dttm, b.prj_id, b.noti_open_perm, c.prj_ttl
		from schedule a, notice_writing b, project c
		where a.noti_id = b.noti_id
			and c.prj_id = #{prjId}
			and c.prj_id = b.prj_id
	</select>

	<!-- 프로젝트 : 파일 -->
	<select id="fileList">
			select * from text
	</select>

	<!-- 글 입력 -->
	<insert id="txtInsert">
			select * from text
	</insert>

	<!-- 글 수정 -->
	<update id="txtUpdate">
			select * from text
	</update>

	<!-- 업무 입력 -->
	<insert id="tskInsert">
			select * from text
	</insert>

	<!-- 업무 수정 -->
	<update id="tskUpdate">
			select * from text
	</update>

	<!-- 일정 입력 -->
	<insert id="scheInsert">
			select * from text
	</insert>

	<!-- 일정 수정 -->
	<update id="scheUpdate">
			select * from text
	</update>

	<!-- 할일 입력 -->
	<insert id="todoInsert">
			select * from text
	</insert>

	<!-- 할일 수정 -->
	<update id="todoUpdate">
			select * from text
	</update>

	<!-- 게시글 삭제 -->
	<delete id="nwDelete">
			select * from text
	</delete>

	<!-- 댓글 목록 -->
	<select id="replyList">
			select * from text
	</select>

	<!-- 댓글 입력 -->
	<insert id="replyInsert">
			select * from text
	</insert>

	<!-- 댓글 수정 -->
	<update id="replyUpdate">
			select * from text
	</update>

	<!-- 댓글 삭제 -->
	<delete id="replyDelete">
			select * from text
	</delete>


	<!-- 글 상세보기(팝업) **-->
	<select id="PopupTxt" resultType="co.plus.prj.pnw.vo.PNWVO">
		select a.noti_knd, a.noti_dttm b.name as writer, c.*, d.prj_ttl,
		from notice_writing a, member b, text c, project d
		where a.mem_id = b.mem_id
			and a.prj_id = d.prj_id
			and a.noti_id = c.noti_id
			and a.noti_id = #{notiId}
	</select>
	<!-- 업무 상세보기(팝업) **-->
	<select id="PopupTsk" resultType="co.plus.prj.pnw.vo.PNWVO">
		select a.noti_knd, a.noti_dttm b.name as writer, c.*, d.prj_ttl,
		from notice_writing a, member b, task c, project d
		where a.mem_id = b.mem_id
			and a.prj_id = d.prj_id
			and a.noti_id = c.noti_id
			and a.noti_id = #{notiId}
	</select>
	<!-- 하위업무 상세보기(팝업) ** -->
	<select id="Popuptsk" resultType="co.plus.prj.pnw.vo.PNWVO">
		select a.*, b.name, c.subtsk_cntn
		from board a, member b, subtask c
		where a.mem_id = b.mem_id
			and a.noti_id = c.noti_id
			and a.mem_id = #{memId}
	</select>
	<!-- 일정 상세보기(팝업) ** -->
	<select id="PopupSche" resultType="co.plus.prj.pnw.vo.PNWVO">
		select a.*, b.name, c.sche_cntn
		from board a, member b, schedule c
		where a.mem_id = b.mem_id
			and a.noti_id = c.noti_id
			and a.noti_id = #{notiId}
	</select>
	<!-- 할일 상세보기(팝업) -->
	<select id="PopupTodo" resultType="co.plus.prj.pnw.vo.PNWVO">
		select a.noti_knd, a.noti_dttm b.name as writer, c.*, d.prj_ttl,
		from notice_writing a, member b, todo c, project d
		where a.mem_id = b.mem_id
			and a.prj_id = d.prj_id
			and a.noti_id = c.noti_id
			and b.mem_id = c.mem_id
			and a.noti_id = #{notiId}
	</select>


</mapper>