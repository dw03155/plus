<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="co.plus.prj.nwm.mapper.NoticeWritingMapper">
	<!-- 전체 메뉴 -> 내 게시물 목록 -->
	<select id="myPost" resultType="co.plus.prj.nwm.vo.NoticeWritingVO">
		select  a.*, b.name, b.co_url																				
		from 	board a, member b
		where 	a.mem_id = b.mem_id
		and 	a.mem_id = #{memId}
		<!-- 게시물 명으로 검색  -->
		<if test="notiTtl != null and notiTtl != ''">													
			and noti_ttl like '%' || #{notiTtl} || '%'
		</if>
	</select>
	<!-- 전체 메뉴 -> 전체 업무 -->
	<select id="allTask"
		resultType="co.plus.prj.nwm.vo.NoticeWritingVO">		
		SELECT '회사' ty, prj_id, prj_ttl
		FROM 	project
		where 	prj_knd = 'C' --회사 프로젝트 중
		and 	co_url = #{coUrl} -- apple 회사
		union 
		--일반 프로젝트 중 내가 참여한 프로젝트(일부공개/ 전체공개)
		SELECT '일반참여', a.prj_id, a. prj_ttl
		FROM 	project a , prj_parti b
		where 	a.prj_knd = 'N' -- 일반 프로젝트 중
		and 	a.prj_id = b.prj_id --  프로젝트 테이블에 프로젝트번호와 참여자가 참여한 프로젝트 번호가 같다
		and 	b.mem_id = #{memId} -- 참여자 id가 11이고
		and 	a.co_url = #{coUrl}  -- apple 회사
		union 
		--일반 프로젝트 중 내가 참가 안 한 프로젝트 (전체공개)
		SELECT '일반미참여', c.prj_id, c.prj_ttl
		FROM 	project c , prj_parti d
		where  c.prj_knd = 'N' -- 일반 프로젝트 중
		and 	c.prj_open_perm = 'all' -- 전체 공개되어 있는 프로젝트 중
		and 	c.prj_id = d.prj_id -- 프로젝트 테이블의 프로젝트 번황 참여한 프로제긑 번호가 같다
		and 	c.co_url =#{coUrl} -- apple 회사
		<!-- 업무 ->ㅣ 업무 명으로 검색 -->
		<if test="notiTtl != null and notiTtl != ''">			
			and noti_ttl like '%' || #{notiTtl} || '%'
		</if>
	</select>
	<!-- 전체 메뉴 -> 캘린더 -->
	<select id="allSche"
		resultType="co.plus.prj.nwm.vo.NoticeWritingVO">
		select  a.*, b.name
		from  	schedule a, member b
		where 	a.mem_id = b.mem_id
		<!-- 일정 -> 일정 명으로 검색 -->
		<if test="notiTtl != null and notiTtl != ''">			
			and noti_ttl like '%' || #{notiTtl} || '%'
		</if>
	</select>
	<!-- 전체 메뉴 -> 파일 -->
	<select id="allFile">
		select  a.noti_ttl, b.txt_file
		from 		board a, text b
		where a.noti_id = b.noti_id
		<!-- 파일 -> 게시물 명으로 검색 -->
		<if test="notiTtl != null and notiTtl != ''">			
			and noti_ttl like '%' || #{notiTtl} || '%'
		</if>
	</select>

	<!-- 전체 메뉴 -> 북마크 -->
	<select id="bookMarkList" resultType="co.plus.prj.nwm.vo.NoticeWritingVO" parameterType="co.plus.prj.nwm.vo.NoticeWritingVO">
		select  a.noti_knd, a.noti_ttl, c.name, a.noti_dttm
		from 	board a, bookmark b, member c
		where 	a.mem_id = b.mem_id
		and  	b.mem_id = c.mem_id
		and 	b.noti_id = #{notiId}
		<!-- 북마크 -> 게시물 명으로 검색 -->
		<if test="notiTtl != null and notiTtl != ''">			
			and noti_ttl like '%' || #{notiTtl} || '%'
		</if>
	</select>
     
	
	
	<!-- CREATE OR REPLACE FORCE VIEW "PLUS"."BOARD" ("NOTI_ID", "PRJ_ID", "NOTI_KND", 
		"MEM_ID", "NOTI_DTTM", "NOTI_OPEN_PERM", "NOTI_TTL") AS select a."NOTI_ID",a."PRJ_ID",a."NOTI_KND",a."MEM_ID",a."NOTI_DTTM",a."NOTI_OPEN_PERM", 
		b.noti_ttl from notice_writing a, task b where a.noti_id = b.noti_id union 
		all select a."NOTI_ID",a."PRJ_ID",a."NOTI_KND",a."MEM_ID",a."NOTI_DTTM",a."NOTI_OPEN_PERM", 
		c.noti_ttl from notice_writing a, todo c where a.noti_id = c.noti_id union 
		all select a."NOTI_ID",a."PRJ_ID",a."NOTI_KND",a."MEM_ID",a."NOTI_DTTM",a."NOTI_OPEN_PERM", 
		d.noti_ttl from notice_writing a, schedule d where a.noti_id = d.noti_id 
		union all select a."NOTI_ID",a."PRJ_ID",a."NOTI_KND",a."MEM_ID",a."NOTI_DTTM",a."NOTI_OPEN_PERM", 
		e.noti_ttl from notice_writing a, text e where a.noti_id = e.noti_id union 
		all select a."NOTI_ID",a."PRJ_ID",a."NOTI_KND",a."MEM_ID",a."NOTI_DTTM",a."NOTI_OPEN_PERM", 
		f.noti_ttl from notice_writing a, subtask f where a.noti_id = f.noti_id; -->

	<!-- 내 게시물 목록 -> 글 상세보기(팝업) -->
	<select id="myPostTxt"
		resultType="co.plus.prj.nwm.vo.NoticeWritingVO">		
		select  a. noti_knd, b.name, c.*, d.prj_ttl, a.noti_dttm
		from    notice_writing a, member b, text c, project d
		where 	a.mem_id = b.mem_id
		and 	a.prj_id = d.prj_id
		and		a.noti_id = c.noti_id
		and 	a.noti_id= #{notiId}
	</select>
	<!-- 내 게시물 목록 -> 업무 상세보기(팝업) -->
	<select id="myPostTsk"
		resultType="co.plus.prj.nwm.vo.NoticeWritingVO"> 		
		select  a. noti_knd, b.name, c.*, d.prj_ttl, a.noti_dttm
		from 	notice_writing a, member b, task c, project d
		where 	a.mem_id = b.mem_id
		and 	a.prj_id=d.prj_id
		and 	a.noti_id = c.noti_id
		and 	a.noti_id= #{notiId}
	</select>
	<!-- 내 게시물 목록 -> 하위업무 상세보기(팝업) -->
	<select id="myPostSubtsk"
		resultType="co.plus.prj.nwm.vo.NoticeWritingVO">	
		select 	a.*, b.name, c.subtsk_cntn
		from 	board a, member b, subtask c
		where 	a.mem_id = b.mem_id
		and 	a.noti_id = c.noti_id
		and 	a.mem_id = #{memId}
	</select>
	<!-- 내 게시물 목록 -> 일정 상세보기(팝업) -->
	<select id="myPostSche"
		resultType="co.plus.prj.nwm.vo.NoticeWritingVO">		
		select  a.*, b.name, c.sche_cntn
		from 	board a, member b, schedule c
		where 	a.mem_id = b.mem_id
		and 	a.noti_id = c.noti_id
		and 	a.noti_id = #{notiId}
	</select>
	<!-- 내 게시물 목록 -> 할일 상세보기(팝업) -->
	<select id="myPostTodo"
		resultType="co.plus.prj.nwm.vo.NoticeWritingVO">		
		select  a. noti_knd, b.name, c.*, d.prj_ttl, a.noti_dttm
		from 	notice_writing a, member b, todo c, project d
		where 	a.mem_id = b.mem_id
		and 	a.prj_id=d.prj_id
		and 	a.noti_id = c.noti_id
		and 	b.mem_id = c.mem_id
		and 	c.noti_id = #{notiId}
	</select>

	<!-- 게시글 개수 출력 (미구현) -->
	<select id="noticeCount" resultType="int">					
		select count(*)
		from notice_writing
		where mem_id = #{memId}
	</select>



	<!-- 프로젝트 선택 -> 홈 (게시물 목록 조회) -->
	<select id="totalNotice"
		resultType="co.plus.prj.nwm.vo.NoticeWritingVO">	
		select  a.*, b.name																		
		from 	board a, member b
		where 	a.mem_id = b.mem_id
		and 	a.prj_id = #{prjId}
		<!-- 홈 -> 게시물 명으로 검색 -->
		<if test="notiTtl != null and notiTtl != ''">			
			and noti_ttl like '%' || #{notiTtl} || '%'
		</if>
	</select>
	
	<!-- 프로젝트 선택 후 -> 업무 (1개 프로젝트) -->
	<select id="tskList" resultType="co.plus.prj.nwm.vo.NoticeWritingVO">
		select  a.*, b.name
		from 	board a, member b
		where 	a.mem_id = b.mem_id
		and 	a.noti_knd = 'task'
		and 	a.prj_id = #{prjId}
	</select>
	
	<update id="UpdateTxt" parameterType="co.plus.prj.nwm.vo.NoticeWritingVO">
		update 	text 
		set 	noti_ttl = #{notiTtl}, txt_cntn = #{txtCntn}, txt_pl = #{txtPl}, txt_file = #{file}
		where 	noti_id = #{notiId}
	</update>

</mapper>